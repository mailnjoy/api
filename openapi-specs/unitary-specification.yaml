openapi: 3.0.3
info:
  title: Check by MailnJoy - API Partenaire - Unitary Validation
  description: Cette page présente la documentation de l'API permettant de valider
    des mails unitairement.
  termsOfService: https://developer.mailnjoy.com/terms/
  contact:
    url: https://developer.mailnjoy.com/faq/
    email: contact-developer@mailnjoy.com
  license:
    name: Consulter la licence
    url: https://mit-license.org
  version: 1.0.0
externalDocs:
  description: Accèder au GitHub de l'API
  url: https://github.com/mailnjoy/check-api
servers:
- url: https://api.mailnjoy.com
security:
- apiId: []
  apiSecret: []
tags:
- name: unitary
  description: La validation d'un seul mail
paths:
  /v1/unitary:
    post:
      tags:
      - unitary
      description: Valide une unique adresse mail. L'appel prend quelques secondes
      operationId: validateOne
      parameters:
      - name: type
        in: query
        description: Le type de validation, simple ou appronfondie. Le type du retour
          dépendra de l'option selectionnée
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ValidationType'
      requestBody:
        description: Le mail à valider
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/Email'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        "400":
          description: Le paramétre n'est pas un mail valide ou le type spécifié est
            incorrect
        "401":
          description: Le couple id/secret est absent ou incorrect
        "403":
          description: Pas assez de crédit pour lancer la validation
        "500":
          description: Erreur serveur et/ou indisponibilité temporaire du service
components:
  schemas:
    Email:
      type: string
      description: Une adresse email classique
      example: john.doe@company.com
    ValidationResponse:
      description: Le résultat d'une validation unitaire
      discriminator:
        propertyName: validationType
        mapping:
          SIMPLE: '#/components/schemas/ValidationSimple'
          DEEP: '#/components/schemas/ValidationDeep'
      oneOf:
      - $ref: '#/components/schemas/ValidationSimple'
      - $ref: '#/components/schemas/ValidationDeep'
    ValidationSimple:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 564
        email:
          type: integer
          description: l'email validé
          readOnly: true
          example: 564
        created:
          type: string
          description: Datetime de création de la validation, au format ISO 8601
          readOnly: true
          example: 2020-02-29T18:02:42.847Z
        validated:
          type: string
          description: Datetime de fin de la validation, au format ISO 8601
          readOnly: true
          example: 2020-02-29T18:02:46.906Z
        validationType:
          $ref: '#/components/schemas/ValidationType'
        userId:
          type: integer
          description: L'utilisateur qui a lancé la validation, ici le compte de développement
          readOnly: true
          example: 12
        status:
          $ref: '#/components/schemas/Status'
        category:
          $ref: '#/components/schemas/Category'
        attributs:
          $ref: '#/components/schemas/Attributs'
      description: Le résultat d'une validation unitaire simple
    ValidationDeep:
      allOf:
      - $ref: '#/components/schemas/ValidationSimple'
      - type: object
        properties:
          extras:
            $ref: '#/components/schemas/Extras'
          score:
            $ref: '#/components/schemas/Score'
        description: Le résultat d'une validation unitaire approfondie
    ValidationType:
      type: string
      description: todo
      enum:
      - simple
      - deep
    Status:
      type: string
      description: todo
      enum:
      - VALID
      - INVALID
      - INCORRECT
      - SUSPECT
      - FULL
    Category:
      type: string
      description: todo
      enum:
      - VERY_SAFE
      - SAFE
      - RISKY
      - UNSAFE
    Attributs:
      type: object
      properties:
        alias:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
        free:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
        autogenerated:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
        catchall:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
        disposable:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
        role:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
        spamtrap:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
      description: Les caractéristiques technique de l'adresse email validé
    Extras:
      type: object
      properties:
        socialMedia:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
        marketingPlateform:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
        breachList:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
        fraudList:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
        blacklisted:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
        young:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
        suspect:
          allOf:
          - $ref: '#/components/schemas/Attribut'
          - description: todo
      description: todo
    Score:
      type: object
      properties:
        result:
          type: number
          description: Le score de l'adresse
          format: float
          readOnly: true
          example: 7.8
        total:
          type: number
          description: Le score maximal que peut atteindre l'adresse
          format: float
          readOnly: true
          example: 10.0
      description: La note de confiance attribuée à l'adresse email
      readOnly: true
    Attribut:
      type: object
      properties:
        type:
          type: string
          description: Indique si l'attribut est une caractéristique recherchée (POSITIVE),
            à éviter (NEGATIVE) ou apportant juste une information (NEUTRAL)
          readOnly: true
          enum:
          - POSITIVE
          - NEUTRAL
          - NEGATIVE
        value:
          type: boolean
          description: Indique sur l'adresse email posséde l'attribut (true) ou non
            (false)
          readOnly: true
      description: todo
  securitySchemes:
    apiId:
      type: apiKey
      name: mailnjoy-id
      in: header
    apiSecret:
      type: apiKey
      name: mailnjoy-secret
      in: header
