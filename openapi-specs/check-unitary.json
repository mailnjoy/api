{
   "openapi": "3.0.3",
   "info": {
      "title": "Check by MailnJoy - Public API - Unitary Validation",
      "description": "Cette page présente la documentation de l'API permettant de valider des mails unitairement",
      "termsOfService": "https://developer.mailnjoy.com/terms/",
      "contact": {
         "email": "contact-developer@mailnjoy.com",
         "url": "https://developer.mailnjoy.com/faq/"
      },
      "license": {
         "name": "Consulter la licence",
         "url": "https://mit-license.org"
      },
      "version": "1.0.0"
   },
   "externalDocs": {
      "description": "Accèder au site dédié à l'API mailnjoy",
      "url": "http://developer.mailnjoy.com"
   },
   "servers": [
      {
         "url": "https://api.mailnjoy.com"
      }
   ],
   "tags": [
      {
         "name": "unitary",
         "description": "La validation d'un seul mail"
      }
   ],
   "paths": {
      "/v1/unitary": {
         "post": {
            "tags": [
               "unitary"
            ],
            "operationId": "validOne",
            "description": "Valide une unique adresse mail. L'appel prend quelques secondes",
            "parameters": [
               {
                  "in": "query",
                  "name": "type",
                  "schema": {
                     "$ref": "#/components/schemas/ValidationType"
                  },
                  "description": "Le type de validation, simple ou appronfondie. Le type du retour dépendra de l'option selectionnée"
               }
            ],
            "requestBody": {
               "description": "Le mail à valider",
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Email"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "oneOf": [
                              {
                                 "$ref": "#/components/schemas/ValidationSimple"
                              },
                              {
                                 "$ref": "#/components/schemas/ValidationDeep"
                              }
                           ]
                        }
                     }
                  }
               },
               "400": {
                  "description": "Le paramétre n'est pas un mail valide"
               },
               "401": {
                  "description": "Le couple id/secret est absent ou incorrect"
               },
               "403": {
                  "description": "Pas assez de crédit pour lancer la validation"
               },
               "500": {
                  "description": "Erreur serveur et/ou indisponibilité temporaire du service"
               }
            }
         }
      }
   },
   "components": {
      "schemas": {
         "Email": {
            "type": "string",
            "description": "Une adresse email classique",
            "example": "john.doe@company.com"
         },
         "ValidationSimple": {
            "type": "object",
            "description": "Le résultat d'une validation unitaire simple",
            "properties": {
               "id": {
                  "type": "integer",
                  "readOnly": true,
                  "example": 564
               },
               "email": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "l'email validé",
                  "example": 564
               },
               "created": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Datetime de création de la validation, au format ISO 8601",
                  "example": "2020-02-29T18:02:42.847Z"
               },
               "validated": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Datetime de fin de la validation, au format ISO 8601",
                  "example": "2020-02-29T18:02:46.906Z"
               },
               "validationType": {
                  "$ref": "#/components/schemas/ValidationType"
               },
               "userId": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "L'utilisateur qui a lancé la validation, ici le compte de développement",
                  "example": 12
               },
               "status": {
                  "$ref": "#/components/schemas/Status"
               },
               "category": {
                  "$ref": "#/components/schemas/Category"
               },
               "attributs": {
                  "$ref": "#/components/schemas/Attributs"
               }
            }
         },
         "ValidationDeep": {
            "allOf": [
               {
                  "$ref": "#/components/schemas/ValidationSimple"
               },
               {
                  "type": "object",
                  "description": "Le résultat d'une validation unitaire approfondie",
                  "properties": {
                     "extras": {
                        "$ref": "#/components/schemas/Extras"
                     },
                     "score": {
                        "$ref": "#/components/schemas/Score"
                     }
                  }
               }
            ]
         },
         "ValidationType": {
            "type": "string",
            "enum": [
               "SIMPLE",
               "DEEP"
            ],
            "description": "todo"
         },
         "Status": {
            "type": "string",
            "enum": [
               "VALID",
               "INVALID",
               "INCORRECT",
               "SUSPECT",
               "FULL"
            ],
            "description": "todo"
         },
         "Category": {
            "type": "string",
            "enum": [
               "VERY_SAFE",
               "SAFE",
               "RISKY",
               "UNSAFE"
            ],
            "description": "todo"
         },
         "Attributs": {
            "type": "object",
            "description": "Les caractéristiques technique de l'adresse email validé",
            "properties": {
               "alias": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               },
               "free": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               },
               "autogenerated": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               },
               "catchall": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               },
               "disposable": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               },
               "role": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               },
               "spamtrap": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               }
            }
         },
         "Extras": {
            "type": "object",
            "description": "todo",
            "properties": {
               "socialMedia": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               },
               "marketingPlateform": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               },
               "breachList": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               },
               "fraudList": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               },
               "blacklisted": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               },
               "young": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               },
               "suspect": {
                  "allOf": [
                     {
                        "$ref": "#/components/schemas/Attribut"
                     },
                     {
                        "description": "todo"
                     }
                  ]
               }
            }
         },
         "Score": {
            "type": "object",
            "readOnly": true,
            "description": "La note de confiance attribuée à l'adresse email",
            "properties": {
               "result": {
                  "type": "number",
                  "format": "float",
                  "readOnly": true,
                  "description": "Le score de l'adresse",
                  "example": 7.8
               },
               "total": {
                  "type": "number",
                  "format": "float",
                  "readOnly": true,
                  "description": "Le score maximal que peut atteindre l'adresse",
                  "example": 10
               }
            }
         },
         "Attribut": {
            "type": "object",
            "description": "todo",
            "properties": {
               "type": {
                  "type": "string",
                  "enum": [
                     "POSITIVE",
                     "NEUTRAL",
                     "NEGATIVE"
                  ],
                  "readOnly": true,
                  "description": "Indique si l'attribut est une caractéristique recherchée (POSITIVE), à éviter (NEGATIVE) ou apportant juste une information (NEUTRAL)"
               },
               "value": {
                  "type": "boolean",
                  "readOnly": true,
                  "description": "Indique sur l'adresse email posséde l'attribut (true) ou non (false)"
               }
            }
         }
      },
      "securitySchemes": {
         "apiId": {
            "type": "apiKey",
            "name": "mailnjoy-id",
            "in": "header"
         },
         "apiSecret": {
            "type": "apiKey",
            "name": "mailnjoy-secret",
            "in": "header"
         }
      }
   },
   "security": [
      {
         "apiId": [],
         "apiSecret": []
      }
   ]
}